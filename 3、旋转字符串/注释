一、代码详细解释
    2.1 temp = (s + s)[len(s) - offset : 2 * len(s) - offset]
        首先，将字符串s与自身进行拼接，生成一个长度为2倍s的新字符串。
        然后，从这个新字符串中截取一个子串。
        子串的起始位置是从后往前数第offset个字符：len(s) - offset。
        子串的结束位置是从后往前数第offset个字符所在的位置：2 * len(s) - offset。
        最后，将截取到的子串赋值给变量temp。
        这段代码的目的可能是为了实现循环移动字符串的效果。通过将字符串s与自身拼接，我们可以得到一个带有循环重复内容的新字符串。然后，通过截取合适的位置，可以实现字符串的循环移动。
        例如34567拼接34567为3456734567，如果offset为3，起始位置为5，终止位置为4
        [start : end]字符串操作的起始位置，终止位置不包括
    2.2 s + s 字符串的拼接
    2.3 s = ["a","b","c"]  字符串的拼写
    2.4 s[start], s[end] = s[end], s[start] 这一行代码，会交换索引 start 和索引 end 处的元素的值。比如，假设 start 等于 1，
        end 等于 3，那么这行代码的效果就是将列表 s 的第二个元素（索引为 1）的值和第四个元素（索引为 3）的值进行交换。